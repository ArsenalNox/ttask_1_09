services:
  redis:
    image: "redis"
    ports:
      - "6379:6379"

  fastapi:
    build: ./app/
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - REDIS_HOST=${REDIS_HOST}
      - EDIT_STORE_PATH=/app/data
      - DATA_STORE_PATH=/app/data
      - SECRET_KEY=${SECRET_KEY}
      - ALGORITHM=${ALGORITHM}
      - CREATE_DATABASE=1
    volumes:
      - ./app-volume:/app/data

  worker:
    build: ./cel/
    depends_on:
      - redis
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - EDIT_STORE_PATH=/app/data
      - DATA_STORE_PATH=/app/data

    volumes:
      - ./app-volume:/app/data

  flower:
    image: "mher/flower"
    ports:
      - "5555:5555"
    depends_on:
      - redis
    command: sh -c "celery --broker=redis://redis:6379/0 flower"

  db:
    container_name: project_db
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - PGPORT=${POSTGRES_PORT}

    ports:
      - '5432:5432'

    volumes:
      - ./postgres-data:/var/lib/postgresql/data

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  app-volume: